# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  UNIT_TEST_SETTINGS: ./UnitTests/unitTestSettings.json

jobs:
  build:

    runs-on: ubuntu-latest

    environment: OSSBUILD

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
    - name: Set Test Secrets
      run: |
        sed -i 's/"MAPEPIRE_HOST": "[^"]*"/"MAPEPIRE_HOST": "${{ secrets.MAPEPIRE_HOST }}"/' ${{ env.UNIT_TEST_SETTINGS }}
        sed -i 's/"MAPEPIRE_PORT": [0-9]*/"MAPEPIRE_PORT": ${{ secrets.MAPEPIRE_PORT }}/' ${{ env.UNIT_TEST_SETTINGS }}
        sed -i 's/"MAPEPIRE_USER": "[^"]*"/"MAPEPIRE_USER": "${{ secrets.MAPEPIRE_USER }}"/' ${{ env.UNIT_TEST_SETTINGS }}
        sed -i 's/"MAPEPIRE_PASSWORD": "[^"]*"/"MAPEPIRE_PASSWORD": "${{ secrets.MAPEPIRE_PASSWORD }}"/' ${{ env.UNIT_TEST_SETTINGS }}
    - name: Restore dependencies
      run: dotnet restore
    - name: Create staging directory
      run: mkdir -p ./staging
    - name: Build
      run: dotnet build --output ./staging --no-restore
    - name: Test
      run: dotnet test --output ./staging --no-build --verbosity normal
    - name: list .exe artifacts
      run: find staging -name \*.exe
    - name: list .dll artifacts
      run: find staging -name \*.dll
    - name: Grab distribution files
      working-directory: staging
      run: |
       mkdir -p ../dist
       mv *.dll *.pdb ../dist/
    - name: Upload dist artifact
      uses: actions/upload-artifact@v4
      id: artifact-upload
      with:
        name: dist
        path: dist
        if-no-files-found: error
